const burger=document.querySelector(".container-header__burger"),menuBurger=document.querySelector(".container-header__burger-menu"),arrows=document.querySelectorAll(".arrow-line"),arrowLeft=document.querySelector("#arrow-left"),arrowRigth=document.querySelector("#arrow-rigth"),burgerLine=document.querySelectorAll(".burger-line");let index=1,indexA=1;function menuActive(){1===index?(console.log("index=1"),burgerCross(),menuBurger.classList.add("active"),index=0):0===index&&(console.log("index=0"),burgerBack(),menuBurger.classList.remove("active"),index++)}burger.addEventListener("click",menuActive);for(let e of arrows)e.addEventListener("click",arrowRot);function arrowRot(){1===indexA?(console.log(indexA),arrowLeft.style.transform="rotate(135deg)",arrowRigth.style.transform="rotate(-135deg)",indexA=1,setTimeout(menuActive,300),setTimeout(semiSecond,700)):0===indexA&&(arrowRigth.style.transform="rotateZ(-45deg)",arrowLeft.style.transform="rotateZ(45deg)",console.log(indexA),indexA++)}const semiSecond=()=>{arrowRigth.style.transform="rotateZ(-45deg)",arrowLeft.style.transform="rotateZ(45deg)"};function burgerCross(){burgerLine[1].style.width="0",setTimeout((()=>{burgerLine[0].style.transform="rotateZ(45deg) translate(-4px ,-4px)",burgerLine[2].style.transform="rotateZ(-45deg) "}),200)}function burgerBack(){burgerLine[0].style.transform="rotateZ(0deg)translate(0 ,0)",burgerLine[2].style.transform="rotateZ(0deg)",setTimeout((()=>{burgerLine[1].style.width="22.5px"}),300)}function onEntry(e){e.forEach((e=>{e.isIntersecting?e.target.classList.add("active"):e.target.classList.remove("active")}))}let options={threshold:[.5]},observer=new IntersectionObserver(onEntry,options),elements=document.querySelectorAll(".anim-items");for(let e of elements)observer.observe(e);